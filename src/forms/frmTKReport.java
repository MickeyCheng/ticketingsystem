
package forms;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
public class frmTKReport extends javax.swing.JFrame {
ResultSet rs;
Connection conn;
PreparedStatement pstmt;
int getMaxID;
SimpleDateFormat sdfTime = new SimpleDateFormat("hh:mm a");
SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd");
DecimalFormat df = new DecimalFormat ("#.00");
long endtime,startTime;

    public frmTKReport() {
        initComponents();
        doConnect();
        FillCombo();
        FillTable();
        SetDateToday();
        setLocationRelativeTo(null);
        tblTK.setAutoCreateRowSorter(true);
        setDefaultCloseOperation(frmTKReport.DISPOSE_ON_CLOSE);
        cmbEmployee.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (cmbEmployee.getSelectedIndex() != -1){
                    chkAll.setSelected(false);
                }
            }
        });
    }
    private void SetDateToday(){
        dateFrom.setDate(new Date());
        dateTo.setDate(new Date());
    }
    private void FillTable(){
        try{
            String queryTime = "Select tk_name,tk_date,tk_login,tk_logout,tk_hours,tk_lunchout,tk_lunchin, tk_lunchhours from tbltimekeeping order by tk_NAME ASC";
            pstmt = conn.prepareStatement(queryTime);
            rs = pstmt.executeQuery();
            tblTK.setModel(DbUtils.resultSetToTableModel(rs));
            tblTK.getColumnModel().getColumn(0).setHeaderValue("NAME");
            tblTK.getColumnModel().getColumn(1).setHeaderValue("DATE");
            tblTK.getColumnModel().getColumn(2).setHeaderValue("LOGIN");
            tblTK.getColumnModel().getColumn(3).setHeaderValue("LOGOUT");
            tblTK.getColumnModel().getColumn(4).setHeaderValue("HOURS");
            tblTK.getColumnModel().getColumn(5).setHeaderValue("LUNCH OUT");
            tblTK.getColumnModel().getColumn(6).setHeaderValue("LUNCH IN");
            tblTK.getColumnModel().getColumn(7).setHeaderValue("LUNCH HOURS");
            pstmt.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    private void FillCombo(){
        cmbEmployee.removeAllItems();
        try{
            pstmt = conn.prepareStatement("SELECT uc_username from tblUserControl order by uc_username");
            rs = pstmt.executeQuery();
            while(rs.next()){
                cmbEmployee.addItem(rs.getString("uc_username"));
            }
            pstmt.close();
            cmbEmployee.setSelectedIndex(-1);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    public void doConnect(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
//            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbticketing","root","root");
    //        conn = DriverManager.getConnection("jdbc:mysql://192.168.1.13/dbticketing","iSoft","iSoft123");
            conn = DriverManager.getConnection("jdbc:mysql://192.168.100.2/dbticketing","iSoft","iSoft123");
        }catch(SQLException | ClassNotFoundException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dateFrom = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        dateTo = new com.toedter.calendar.JDateChooser();
        cmbEmployee = new javax.swing.JComboBox<>();
        chkAll = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTK = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        btnPrintAll = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnPrintIndividual = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FROM:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 60, 20));

        dateFrom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dateFromMouseReleased(evt);
            }
        });
        jPanel1.add(dateFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 190, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("TO:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 50, 20));

        dateTo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dateToMouseReleased(evt);
            }
        });
        jPanel1.add(dateTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 190, 30));

        cmbEmployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(cmbEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 300, 30));

        chkAll.setText("All");
        chkAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkAllMouseClicked(evt);
            }
        });
        jPanel1.add(chkAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, -1, -1));

        tblTK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTK);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 570, 240));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 570, 10));

        btnPrintAll.setText("Print All");
        btnPrintAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintAllActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrintAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, -1, -1));

        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));

        btnPrintIndividual.setText("Print Individual");
        btnPrintIndividual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintIndividualActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrintIndividual, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 420, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateFromMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateFromMouseReleased

    }//GEN-LAST:event_dateFromMouseReleased

    private void dateToMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateToMouseReleased

    }//GEN-LAST:event_dateToMouseReleased
    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
    Date getFrom = dateFrom.getDate();
    Date getTo = dateTo.getDate();
    if (chkAll.isSelected()){
        try{
            String searchQuery ="select tk_name,tk_date,tk_login,tk_logout,tk_hours,tk_lunchout,tk_lunchin, tk_lunchhours from tbltimekeeping where tk_date between ? and ? order by tk_date ASC";
            pstmt = conn.prepareStatement(searchQuery);
            pstmt.setString(1, sdfDate.format(getFrom));
            pstmt.setString(2, sdfDate.format(getTo));
            rs = pstmt.executeQuery();
            tblTK.setModel(DbUtils.resultSetToTableModel(rs));
            tblTK.getColumnModel().getColumn(0).setHeaderValue("NAME");
            tblTK.getColumnModel().getColumn(1).setHeaderValue("DATE");
            tblTK.getColumnModel().getColumn(2).setHeaderValue("LOGIN");
            tblTK.getColumnModel().getColumn(3).setHeaderValue("LOGOUT");
            tblTK.getColumnModel().getColumn(4).setHeaderValue("HOURS");
            tblTK.getColumnModel().getColumn(5).setHeaderValue("LUNCH OUT");
            tblTK.getColumnModel().getColumn(6).setHeaderValue("LUNCH IN");
            tblTK.getColumnModel().getColumn(7).setHeaderValue("LUNCH HOURS");
            pstmt.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }else{
        try{
            String searchQuery ="select tk_name,tk_date,tk_login,tk_logout,tk_hours,tk_lunchout,tk_lunchin, tk_lunchhours from tbltimekeeping where tk_name =? and tk_date between ? and ? order by tk_date ASC";
            pstmt = conn.prepareStatement(searchQuery);
            pstmt.setString(1, cmbEmployee.getSelectedItem().toString());
            pstmt.setString(2, sdfDate.format(getFrom));
            pstmt.setString(3, sdfDate.format(getTo));
            rs = pstmt.executeQuery();
            tblTK.setModel(DbUtils.resultSetToTableModel(rs));
            tblTK.getColumnModel().getColumn(0).setHeaderValue("NAME");
            tblTK.getColumnModel().getColumn(1).setHeaderValue("DATE");
            tblTK.getColumnModel().getColumn(2).setHeaderValue("LOGIN");
            tblTK.getColumnModel().getColumn(3).setHeaderValue("LOGOUT");
            tblTK.getColumnModel().getColumn(4).setHeaderValue("HOURS");
            tblTK.getColumnModel().getColumn(5).setHeaderValue("LUNCH OUT");
            tblTK.getColumnModel().getColumn(6).setHeaderValue("LUNCH IN");
            tblTK.getColumnModel().getColumn(7).setHeaderValue("LUNCH HOURS");
            pstmt.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnPrintAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintAllActionPerformed
        Map param = new HashMap();
        param.put("dateFrom",String.valueOf(sdfDate.format(dateFrom.getDate())));
        param.put("dateTo",String.valueOf(sdfDate.format(dateTo.getDate())));
        try{
            conn.close();
            Class.forName("com.mysql.jdbc.Driver");
            //            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbticketing","root","root");
            conn = DriverManager.getConnection("jdbc:mysql://192.168.100.2/dbticketing","iSoft","iSoft123");
            JasperDesign jd = JRXmlLoader.load(new File("src\\reports\\repTimekeeping.jrxml"));
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = JasperFillManager.fillReport(jr, param,conn);
            JasperViewer.viewReport(jp,false);
        }catch(ClassNotFoundException | SQLException | JRException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnPrintAllActionPerformed

    private void btnPrintIndividualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintIndividualActionPerformed
        if (cmbEmployee.getSelectedIndex() == -1){
            JOptionPane.showMessageDialog(this, "Please select a staff name", "Print Individual",JOptionPane.WARNING_MESSAGE);
            return;
        }else{
            Map param = new HashMap();
            param.put("dateFrom",String.valueOf(sdfDate.format(dateFrom.getDate())));
            param.put("dateTo",String.valueOf(sdfDate.format(dateTo.getDate())));
            param.put("GetEmployee",cmbEmployee.getSelectedItem().toString());
            try{
                conn.close();
                Class.forName("com.mysql.jdbc.Driver");
                //            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbticketing","root","root");
                conn = DriverManager.getConnection("jdbc:mysql://192.168.100.2/dbticketing","iSoft","iSoft123");
                JasperDesign jd = JRXmlLoader.load(new File("src\\reports\\repTimekeepingIndi.jrxml"));
                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, param,conn);
                JasperViewer.viewReport(jp,false);
            }catch(ClassNotFoundException | SQLException | JRException e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnPrintIndividualActionPerformed

    private void chkAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkAllMouseClicked
        cmbEmployee.setSelectedIndex(-1);
    }//GEN-LAST:event_chkAllMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTKReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTKReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTKReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTKReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTKReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrintAll;
    private javax.swing.JButton btnPrintIndividual;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox chkAll;
    private javax.swing.JComboBox<String> cmbEmployee;
    private com.toedter.calendar.JDateChooser dateFrom;
    private com.toedter.calendar.JDateChooser dateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblTK;
    // End of variables declaration//GEN-END:variables
}
